# build pymeshfix, or "the black art of building wheels on Azure"

variables:
  package_name: pymeshfix

trigger:
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'

# Build multiple version of python linux wheels in single job.  
# As we have to start docker and download a docker image, it's more
# efficient to have multiple builds on one image, especially
# considering we share this with pyvista.
jobs:
- job: Linux
  strategy:
    matrix:
      64Bit2010:
        arch: x86_64
        plat: manylinux2010_x86_64
        image: quay.io/pypa/manylinux2010_x86_64
        python.architecture: x64  
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'
      displayName: 'Use Python $(python.version)'
    - script: |
        set -ex
        docker run -e PLAT=$(plat) -e package_name=$(package_name) --rm -v `pwd`:/io $(image) /io/.ci/build_wheels.sh
        ls -lh wheelhouse/
        mkdir -p dist
        # cheat by renaming file to manylinux1 (even though it's really 2010)
        cd wheelhouse
        find . -type f -name '$(package_name)-*' | while read FILE ; do
          NEWFILE="$(echo ${FILE} |sed -e 's/\linux/manylinux1/')"
          cp "${FILE}" ../dist/"${NEWFILE}" ;
        done 
        cd ..
      displayName: Build wheels

    - script: |
        pip install twine wheel
        twine upload dist/*.whl --skip-existing
      displayName: 'Upload to PyPi'
      condition: contains(variables['Build.SourceBranch'], 'refs/tags/')
    env:
      TWINE_USERNAME: $(twine.username)
      TWINE_PASSWORD: $(twine.password)
      TWINE_REPOSITORY_URL: "https://upload.pypi.org/legacy/"

    - script: |
        pip install twine wheel
        twine upload dist/*.whl --skip-existing
      displayName: 'Upload to Testing PyPi'
      condition: not(contains(variables['Build.SourceBranch'], 'refs/tags/'))
    env:
      TWINE_USERNAME: $(twine.username)
      TWINE_PASSWORD: $(twine.password)
      TWINE_REPOSITORY_URL: "https://test.pypi.org/legacy/"
