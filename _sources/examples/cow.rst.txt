.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_examples_cow.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_cow.py:


Holey Cow
---------

Repair a holey cow

.. code-block:: default


    # sphinx_gallery_thumbnail_number = 1
    import pyvista as pv
    import pymeshfix as mf
    from pyvista import examples
    import numpy as np








.. code-block:: default

    cow = examples.download_cow()

    # Add holes and cast to triangulated PolyData
    cow['random'] = np.random.rand(cow.n_cells)
    holy_cow = cow.threshold(0.9, invert=True).extract_geometry().tri_filter()
    print(holy_cow)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    PolyData (0x7f2a771ce8e8)
      N Cells:      5216
      N Points:     2903
      X Bounds:     -4.446e+00, 5.998e+00
      Y Bounds:     -3.637e+00, 2.760e+00
      Z Bounds:     -1.701e+00, 1.701e+00
      N Scalars:    1



.. code-block:: default


    # A nice camera location of the cow
    cpos= [(6.56, 8.73, 22.03),
           (0.77, -0.44, 0.0),
           (-0.13, 0.93, -0.35)]

    meshfix = mf.MeshFix(holy_cow)
    holes = meshfix.extract_holes()

    # Render the mesh and outline the holes
    p = pv.Plotter()
    p.add_mesh(holy_cow, color=True)
    p.add_mesh(holes, color='r', line_width=8)
    p.camera_position = cpos
    p.enable_eye_dome_lighting() # helps depth perception
    p.show()





.. image:: /examples/images/sphx_glr_cow_001.png
    :class: sphx-glr-single-img




Repair the holey cow


.. code-block:: default


    meshfix.repair(verbose=True)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Patching holes...
    Patched 203 holes
    Fixing degeneracies and intersections


Show the repaired result


.. code-block:: default


    repaired = meshfix.mesh
    print(repaired)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    PolyData (0x7f2a771cea68)
      N Cells:      5452
      N Points:     2728
      X Bounds:     -3.696e+00, 5.998e+00
      Y Bounds:     -3.637e+00, 2.760e+00
      Z Bounds:     -1.701e+00, 1.701e+00
      N Scalars:    0



.. code-block:: default

    repaired.plot(cpos=cpos)



.. image:: /examples/images/sphx_glr_cow_002.png
    :class: sphx-glr-single-img





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  5.368 seconds)


.. _sphx_glr_download_examples_cow.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: cow.py <cow.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: cow.ipynb <cow.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
