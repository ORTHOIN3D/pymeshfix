.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_examples_torso.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_torso.py:


Torso
-----

Repair the torso mesh where it was extracted and subtle holes along complex
parts of the mesh

.. code-block:: default


    # sphinx_gallery_thumbnail_number = 2
    import pyvista as pv
    import pymeshfix as mf
    from pyvista import examples


    mesh = examples.download_torso()
    print(mesh)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    PolyData (0x7fdd4caa8c48)
      N Cells:      12448
      N Points:     12015
      X Bounds:     -1.680e+02, 1.720e+02
      Y Bounds:     -1.624e+02, 1.320e+02
      Z Bounds:     -6.442e+02, 9.083e+01
      N Scalars:    0



.. code-block:: default


    cpos = [(-1053., -1251., 83.),
            (2., -15., -276.),
            (0.12, 0.18, 1)]

    mesh.plot(color=True, show_edges=True, cpos=cpos)




.. image:: /examples/images/sphx_glr_torso_001.png
    :class: sphx-glr-single-img




Appy a triangle filter to ensure the mesh is simply polyhedral


.. code-block:: default

    meshfix = mf.MeshFix(mesh.tri_filter())
    holes = meshfix.extract_holes()







Outline the holes in the mesh


.. code-block:: default

    p = pv.Plotter()
    p.add_mesh(mesh)
    p.add_mesh(holes, color='r', line_width=8)
    p.enable_eye_dome_lighting() # helps with depth perception
    p.camera_position = cpos
    p.show()




.. image:: /examples/images/sphx_glr_torso_002.png
    :class: sphx-glr-single-img




Emphasize the hole near the ear - this needs to be repaired so that the mesh
is absolutely water tight.


.. code-block:: default

    cpos_ear = [(180., -206., 17.),
                (107., -122.9, -11.9),
                (-0.13, 0.22, 0.96)]

    p = pv.Plotter()
    p.add_mesh(mesh)
    p.add_mesh(holes, color='r', line_width=8)
    p.enable_eye_dome_lighting() # helps with depth perception
    p.camera_position = cpos_ear
    p.show()




.. image:: /examples/images/sphx_glr_torso_003.png
    :class: sphx-glr-single-img




Perfrom the mesh repair


.. code-block:: default

    meshfix.repair(verbose=True)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Removed 6 small components
    Patching holes...
    Patched 5 holes
    Fixing degeneracies and intersections


Show the repaired mesh


.. code-block:: default

    meshfix.mesh.plot(cpos=cpos, eye_dome_lighting=True)



.. image:: /examples/images/sphx_glr_torso_004.png
    :class: sphx-glr-single-img





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  17.165 seconds)


.. _sphx_glr_download_examples_torso.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: torso.py <torso.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: torso.ipynb <torso.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
